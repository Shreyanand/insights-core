from falafel.mappers.iptables import IPTables
from falafel.tests import context_wrap

IPTABLES_SAVE = """
# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [769:196899]
:REJECT-LOG - [0:0]
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -g ACCEPT
-A INPUT -s 192.168.0.0/24 -j ACCEPT
-A INPUT -s 192.168.2.0/24
-A INPUT -p icmp -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A REJECT-LOG -p tcp -j REJECT --reject-with tcp-reset
COMMIT
# Completed on Tue Aug 16 10:18:43 2016
# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016
*mangle
:PREROUTING ACCEPT [451:22060]
:INPUT ACCEPT [451:22060]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [594:47151]
:POSTROUTING ACCEPT [594:47151]
COMMIT
# Completed on Tue Aug 16 10:18:43 2016
# Generated by iptables-save v1.4.7 on Tue Aug 16 10:18:43 2016
*nat
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [3:450]
:OUTPUT ACCEPT [3:450]
COMMIT
# Completed on Tue Aug 16 10:18:43 2016
"""

PARSED_TCP_REJECT_RULE = {
    "table": "filter",
    "chain": "REJECT-LOG",
    "rule": "-p tcp -j REJECT --reject-with tcp-reset",
    "target_action": "jump",
    "constraints": "-p tcp",
    "target": "REJECT",
    "target_options": "--reject-with tcp-reset"
}


def test_iptables_save():
    ipt = IPTables(context_wrap(IPTABLES_SAVE))
    assert len(ipt.rules) == 8
    assert len(ipt.get_chain("INPUT")) == 7
    assert len(ipt.table_chains("mangle")) == 5
    assert ipt.rules[-1] == PARSED_TCP_REJECT_RULE
    assert ipt.get_table("nat")[1] == {
        "policy": "ACCEPT",
        "table": "nat",
        "name": "POSTROUTING",
        "packet_counter": 3,
        "byte_counter": 450
    }
    assert "tcp-reset" in ipt
    assert "--sport" not in ipt
    assert ipt.get_rule("tcp-reset") == [PARSED_TCP_REJECT_RULE]
